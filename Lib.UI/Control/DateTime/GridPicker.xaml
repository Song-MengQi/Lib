<UserControl x:Class="Lib.UI.GridPicker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Lib.UI"
             mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300">
    <local:ClippingBorder BorderBrush="{StaticResource BorderBrush-Default1}" BorderThickness="1" CornerRadius="4">
        <StackPanel>
            <Grid
                HorizontalAlignment="Stretch"
                Height="{DynamicResource SmallControlHeight}"
                Cursor="Hand"
                MouseLeftButtonUp="TitleGrid_MouseLeftButtonUp">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Background" Value="{DynamicResource Background-Primary1}"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{DynamicResource Background-Primary2}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <TextBlock
                    x:Name="TitleTextBlock"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    TextAlignment="Center"
                    FontSize="{DynamicResource H5FontSize}"
                    Foreground="{DynamicResource ButtonForeground}"/>
            </Grid>
            <Grid x:Name="Grid" Background="White">
                <Grid.Resources>
                    <Style BasedOn="{StaticResource ButtonBaseBaseStyle}" TargetType="{x:Type RadioButton}">
                        <!--<Setter Property="Cursor" Value="Hand"/>-->
                        <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}"/>
                        <Setter Property="Height" Value="{DynamicResource ExtraSmallControlHeight}"/>
                        <Setter Property="Width" Value="{DynamicResource ExtraSmallControlHeight}"/>
                        <Setter Property="Foreground" Value="{DynamicResource Foreground-Default}"/>
                        <EventSetter Event="Click" Handler="Grid_Click"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                    <!--为了增大点击范围，加个Grid-->
                                    <Grid
                                        Background="Transparent">
                                        <ContentPresenter
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            RecognizesAccessKey="False"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RadioButton}">
                                            <!--CornerRadius="2"-->
                                            <Border
                                                Background="{DynamicResource Background-Primary1}">
                                                <ContentPresenter
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    RecognizesAccessKey="False"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
            </Grid>
        </StackPanel>
    </local:ClippingBorder>
</UserControl>